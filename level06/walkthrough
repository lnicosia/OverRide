-- level06 --
Le stack canary est present, on ne pourra pas executer de shellcode
De toute maniere, un overflow n'est pas possible. Il y a un seul
buffer qui est rempli avec un fgets().
Le programme est relativement simple: on donne une string avec fgets()
puis un entier avec scanf().
Une fonction auth(string, entier) va ensuite effectuer des tests sur les 2
entrees et retourner 0 si c'est bon, 1 sinon.
Le check est assez simple en code mais complique a apprehender:
Un entier nb prend pour valeur s[3] ^ 4919 + 6221293.
Ensuite pour chaque caractere de la chaine on ajoute "(nb ^ s[i]) % 1337.
Enfin si nb = notre argument passe au scanf, le resultat est bon.
C'est tres complique de voir l'entree attendu pour obtenir le bon resultat.
Un call a ptrace empeche le debug grace a gdb. On peut le bypass
en changeant la valeur d'eax apres le call et afficher la valeur finale de nb
en fonction de notre premiere entree. Sinon, plus simplement, on peut copier
le programme et mettre un printf avant le retour... ;)
Je constate en mettant arbitrairement 30 * "A" que nb vaut 6244567 apres les
operations. Il ne me reste plus qu'a donner la meme valeur au scanf pour valider
les tests..
En gardant stdin ouvert, cela donne
cat <(python -c 'print "B"*30'; python -c 'print "6244567"') - | ./level06
